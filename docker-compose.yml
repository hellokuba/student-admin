version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: student-admin-backend
    restart: unless-stopped
    # 仅在内部网络暴露端口，不对外暴露
    expose:
      - "3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://mongodb:27017/student_admin
      - JWT_SECRET=your_super_secret_key_change_in_production
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:8080
    depends_on:
      - mongodb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: student-admin-frontend
    restart: unless-stopped
    ports:
      - "8080:80"  # 通过8080端口访问前端，前端Nginx会代理API请求到后端
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=/api  # 修改为相对路径，由Nginx代理转发
      - VITE_APP_TITLE=学生管理系统
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB数据库
  mongodb:
    image: mongo:latest
    container_name: student-admin-mongodb
    restart: unless-stopped
    # 仅在内部网络暴露端口，不对外暴露
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["--bind_ip", "0.0.0.0"]

# 网络配置
networks:
  app-network:
    driver: bridge

# 数据卷配置
volumes:
  mongodb_data:
    driver: local 